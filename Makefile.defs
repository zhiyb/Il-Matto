# Makefile for general AVR
# Author: Yubo Zhi (normanzyb@gmail.com)

CROSS_COMPILE	= avr-
SUFFIX	= .elf

ifndef LIBTRG
# Defaults
MCU_TARGET	?= atmega644p
ifdef MCU_FREQ
DEFS		+= -DF_CPU=$(MCU_FREQ)
else
$(warning "Please use $$(MCU_FREQ)")
endif
LOG		?= ~/.make_avr.log
endif
TOPDIR	?= $(dir $(lastword $(MAKEFILE_LIST)))

OBJCOPY	= $(CROSS_COMPILE)objcopy
OBJDUMP	= $(CROSS_COMPILE)objdump
AVRDUDE	= avrdude

FLAGS	+= -mmcu=$(MCU_TARGET)

# Exports
export MCU_TARGET
#export MCU_FREQ

# Override is only needed by avr-lib build system.
OVERRIDE	= true
LDFLAG	+= -Wl,-Map,$(TRG).map

# Rules
ifndef LIBTRG
EXTRA_TARGETS	+= lst text eeprom
PHONYTRGS	+= lst map
endif

include $(TOPDIR)/Makefile_generic.defs

# Following are not needed when building libraries
ifndef LIBTRG
# Rules for building the .text rom images
# Only hex is needed; Others: bin, srec
.PHONY: text
text: hex
PHONYTRGS	+= hex bin srec

%.hex: %.elf
	$(call verbose,"GEN	$@",\
	$(OBJCOPY) -j .text -j .data -O ihex $< $@)

%.srec: %.elf
	$(call verbose,"GEN	$@",\
	$(OBJCOPY) -j .text -j .data -O srec $< $@)

%.bin: %.elf
	$(call verbose,"GEN	$@",\
	$(OBJCOPY) -j .text -j .data -O binary $< $@)

# Rules for building the .eeprom rom images
# Only ehex is needed; Others: ebin, esrec
.PHONY: eeprom
eeprom:	ehex
EEPFILE ?= $(TRG)_eeprom.hex

EEPTRGS	+= ehex ebin esrec
CLEAN_FILES	+= $(EEPTRGS:e%=$(TRG)_eeprom.%)
.PHONY: $(EEPTRGS)
$(EEPTRGS): e%: $(TRG)_eeprom.%

%_eeprom.hex: %.elf
	$(call verbose,"GEN	$@",\
	$(OBJCOPY) -j .eeprom --change-section-lma .eeprom=0 -O ihex $< $@)

%_eeprom.srec: %.elf
	$(call verbose,"GEN	$@",\
	$(OBJCOPY) -j .eeprom --change-section-lma .eeprom=0 -O srec $< $@)

%_eeprom.bin: %.elf
	$(call verbose,"GEN	$@",\
	$(OBJCOPY) -j .eeprom --change-section-lma .eeprom=0 -O binary $< $@)

# For program MCU with avrdude.
AVROPS	= flash readflash eep readeep fuse flashall
.PHONY: $(AVROPS) $(AVROPS:%=avr-%) knock

$(AVROPS): %: avr-%
	echo $(shell date '+%Y-%m-%d %H:%M:%S'), $(PRGER), $(MCU_TARGET), $@, $(PWD), $(TRG).hex >> $(LOG)

avr-flash: hex
	$(AVRDUDE) -c $(PRGER) -p $(MCU_TARGET) -U flash:w:$(TRG).hex

avr-flashall: hex ehex
	$(AVRDUDE) -c $(PRGER) -p $(MCU_TARGET) -U flash:w:$(TRG).hex -U eeprom:w:$(EEPFILE)

avr-readflash:
	$(AVRDUDE) -c $(PRGER) -p $(MCU_TARGET) -U flash:r:$(TRG).hex:i

avr-eep: ehex
	$(AVRDUDE) -c $(PRGER) -p $(MCU_TARGET) -U eeprom:w:$(EEPFILE)

avr-readeep:
	$(AVRDUDE) -c $(PRGER) -p $(MCU_TARGET) -U eeprom:r:$(EEPFILE):i

avr-fuse:
	$(AVRDUDE) -c $(PRGER) -p $(MCU_TARGET) -U efuse:w:$(EFUSE):m -U hfuse:w:$(HFUSE):m -U lfuse:w:$(LFUSE):m

knock:
	$(AVRDUDE) -c $(PRGER) -p $(MCU_TARGET)
endif

# PHONY targets
.PHONY: $(PHONYTRGS)
$(PHONYTRGS): %: $(TRG).%
CLEAN_FILES	+= $(PHONYTRGS:%=$(TRG).%)
